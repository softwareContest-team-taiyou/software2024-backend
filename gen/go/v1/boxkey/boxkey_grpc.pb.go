// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: v1/boxkey/boxkey.proto

package boxkeyv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	BoxKeyService_InitCreate_FullMethodName = "/proto.boxkey.v1.BoxKeyService/InitCreate"
)

// BoxKeyServiceClient is the client API for BoxKeyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BoxKeyServiceClient interface {
	InitCreate(ctx context.Context, in *InitCreateRequest, opts ...grpc.CallOption) (*InitCreateResponse, error)
}

type boxKeyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBoxKeyServiceClient(cc grpc.ClientConnInterface) BoxKeyServiceClient {
	return &boxKeyServiceClient{cc}
}

func (c *boxKeyServiceClient) InitCreate(ctx context.Context, in *InitCreateRequest, opts ...grpc.CallOption) (*InitCreateResponse, error) {
	out := new(InitCreateResponse)
	err := c.cc.Invoke(ctx, BoxKeyService_InitCreate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BoxKeyServiceServer is the server API for BoxKeyService service.
// All implementations must embed UnimplementedBoxKeyServiceServer
// for forward compatibility
type BoxKeyServiceServer interface {
	InitCreate(context.Context, *InitCreateRequest) (*InitCreateResponse, error)
	mustEmbedUnimplementedBoxKeyServiceServer()
}

// UnimplementedBoxKeyServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBoxKeyServiceServer struct {
}

func (UnimplementedBoxKeyServiceServer) InitCreate(context.Context, *InitCreateRequest) (*InitCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitCreate not implemented")
}
func (UnimplementedBoxKeyServiceServer) mustEmbedUnimplementedBoxKeyServiceServer() {}

// UnsafeBoxKeyServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BoxKeyServiceServer will
// result in compilation errors.
type UnsafeBoxKeyServiceServer interface {
	mustEmbedUnimplementedBoxKeyServiceServer()
}

func RegisterBoxKeyServiceServer(s grpc.ServiceRegistrar, srv BoxKeyServiceServer) {
	s.RegisterService(&BoxKeyService_ServiceDesc, srv)
}

func _BoxKeyService_InitCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoxKeyServiceServer).InitCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BoxKeyService_InitCreate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoxKeyServiceServer).InitCreate(ctx, req.(*InitCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BoxKeyService_ServiceDesc is the grpc.ServiceDesc for BoxKeyService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BoxKeyService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.boxkey.v1.BoxKeyService",
	HandlerType: (*BoxKeyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitCreate",
			Handler:    _BoxKeyService_InitCreate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/boxkey/boxkey.proto",
}
